model Cart {
    id            String     @id @default(cuid())
    userId        String? // Optional for guest checkout
    sessioncartId String
    shippingPrice Decimal    @default(0) @db.Decimal(12, 2)
    taxPrice      Decimal    @default(0) @db.Decimal(12, 2)
    createdAt     DateTime   @default(now())
    updatedAt     DateTime   @updatedAt
    items         CartItem[]

    user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model CartItem {
    id            String         @id @default(cuid())
    cart          Cart           @relation(fields: [cartId], references: [id], onDelete: Cascade)
    cartId        String
    variant       ProductVariant @relation(fields: [variantId], references: [id], onDelete: Cascade)
    variantId     String
    quantity      Int
    price         Decimal        @db.Decimal(12, 2)
    discountType  DiscountType   @default(NONE)
    discountValue Decimal?       @db.Decimal(12, 2)
    createdAt     DateTime       @default(now())
    updatedAt     DateTime       @updatedAt

    @@unique([cartId, variantId]) // Prevent duplicate items in cart
    @@index([variantId])
}
