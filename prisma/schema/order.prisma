model Order {
    id            String        @id @default(cuid())
    orderNumber   String        @unique
    userId        String
    user          User          @relation(fields: [userId], references: [id])
    status        OrderStatus   @default(PENDING)
    paymentStatus PaymentStatus @default(PENDING)
    paymentMethod String?
    paymentId     String? // Payment gateway reference
    paymentResult Json?         @db.Json
    paidAt        DateTime? // Add this field for payment timestamp

    // Addresses
    shippingAddressId String
    shippingAddress   Address @relation("ShippingAddress", fields: [shippingAddressId], references: [id])
    billingAddressId  String
    billingAddress    Address @relation("BillingAddress", fields: [billingAddressId], references: [id])

    // Items
    items OrderItem[]

    // Amounts
    subtotal     Decimal @db.Decimal(10, 2)
    shippingCost Decimal @db.Decimal(10, 2)
    tax          Decimal @db.Decimal(10, 2)
    discount     Decimal @default(0.00) @db.Decimal(10, 2)
    total        Decimal @db.Decimal(10, 2)

    // Additional Info
    notes    String? @db.Text
    metadata Json?   @db.JsonB // For any additional data

    // Timestamps
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([userId])
    @@index([orderNumber])
    @@map("orders")
}

model OrderItem {
    id      String @id @default(cuid())
    orderId String
    order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)

    // Product Info
    variantId String
    variant   ProductVariant @relation(fields: [variantId], references: [id])
    name      String // Snapshot of product name
    sku       String // Snapshot of SKU

    // Pricing
    quantity Int
    price    Decimal @db.Decimal(10, 2)
    discount Decimal @default(0.00) @db.Decimal(10, 2)
    total    Decimal @db.Decimal(10, 2)

    // Additional Info
    metadata Json? @db.JsonB // For any additional data

    // Timestamps
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([orderId])
    @@index([variantId])
    @@map("order_items")
}

enum OrderStatus {
    PENDING
    CONFIRMED
    PROCESSING
    SHIPPED
    DELIVERED
    CANCELLED
    REFUNDED
}

enum PaymentStatus {
    PENDING
    PAID
    FAILED
    REFUNDED
}
